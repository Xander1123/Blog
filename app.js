const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const bodyParser = require('body-parser');
const multer = require('multer');
const path = require('path');
const basicAuth = require('express-basic-auth');

const app = express();
const db = new sqlite3.Database('./database.db');

// üîê Admin v…ô /add s…ôhif…ôl…ôrini parolla qoruyuruq
app.use(['/admin', '/add'], basicAuth({
    users: { 'admin': '12345' }, // ≈üifr…ôni ist…ôy…ô uyƒüun d…ôyi≈ü
    challenge: true,
    unauthorizedResponse: 'ƒ∞caz…ôniz yoxdur!'
}));

// Middleware-l…ôr
app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static('public'));

// üì¶ Multer il…ô ≈ü…ôkil y√ºkl…ôm…ô ayarlarƒ±
const storage = multer.diskStorage({
    destination: 'public/uploads/',
    filename: (req, file, cb) => {
        cb(null, Date.now() + path.extname(file.originalname));
    }
});
const upload = multer({ storage });

// üóÉÔ∏è SQLite veril…ônl…ôr bazasƒ± c…ôdv…ôlini yarat
db.serialize(() => {
    db.run(`CREATE TABLE IF NOT EXISTS posts (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        title TEXT NOT NULL,
        category TEXT,
        content TEXT,
        image TEXT,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )`);
});

// üè† Ana s…ôhif…ô
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'views', 'index.html'));
});

// üìÑ B√ºt√ºn postlarƒ± JSON kimi g√∂st…ôr
app.get('/posts', (req, res) => {
    db.all('SELECT * FROM posts ORDER BY created_at DESC', [], (err, rows) => {
        if (err) return res.status(500).json({ error: 'Database error' });
        res.json(rows);
    });
});

// üîç T…ôk post
app.get('/post/:title', (req, res) => {
    const postTitle = req.params.title.replace(/-/g, '').trim().toLowerCase();
    db.get('SELECT * FROM posts WHERE TRIM(LOWER(title)) = ?', [postTitle], (err, row) => {
        if (err) return res.status(500).json({ error: 'Database error' });
        if (!row) return res.status(404).json({ error: 'Post Not Found' });
        res.json(row);
    });
});

// üìù Post detal s…ôhif…ôsi (HTML)
app.get('/post-details/:title', (req, res) => {
    res.sendFile(path.join(__dirname, 'views', 'post-details.html'));
});

// üîê Admin paneli (≈üifr…ô t…ôl…ôb olunur)
app.get('/admin', (req, res) => {
    res.sendFile(path.join(__dirname, 'views', 'admin.html'));
});

// üîê Post …ôlav…ô et s…ôhif…ôsi (≈üifr…ô t…ôl…ôb olunur)
app.get('/add', (req, res) => {
    res.sendFile(path.join(__dirname, 'views', 'add.html'));
});

// ‚ûï Post …ôlav…ô etm…ô (form vasit…ôsil…ô)
app.post('/add', upload.single('image'), (req, res) => {
    const { title, category, content } = req.body;
    const image = req.file ? `/uploads/${req.file.filename}` : null;

    db.run(
        `INSERT INTO posts (title, category, content, image, created_at) 
         VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)`,
        [title, category, content, image],
        (err) => {
            if (err) return res.status(500).send("Database Error");
            res.redirect('/');
        }
    );
});



// ‚ùå Post silm…ô
app.post('/delete/:id', (req, res) => {
    const id = req.params.id;
    db.run('DELETE FROM posts WHERE id = ?', [id], (err) => {
        if (err) return res.status(500).json({ error: 'Database error' });
        res.json({ message: 'Post deleted successfully' });
    });
});
app.get('/search', (req, res) => {
    const query = req.query.q;
    if (!query) return res.status(400).json({ error: 'Axtarƒ±≈ü sorƒüusu g√∂nd…ôrilm…ôyib.' });

    const searchTerm = `%${query.trim().toLowerCase()}%`;

    db.all(`
        SELECT * FROM posts 
        WHERE LOWER(title) LIKE ? 
           OR LOWER(category) LIKE ? 
           OR LOWER(content) LIKE ?
        ORDER BY created_at DESC
    `, [searchTerm, searchTerm, searchTerm], (err, rows) => {
        if (err) return res.status(500).json({ error: 'Database error' });
        res.json(rows);
    });
});

// üöÄ Serveri i≈ü…ô sal
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server i≈ül…ôyir: http://localhost:${PORT}`);
});
